<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DBCreated" xml:space="preserve">
    <value>創建資料庫</value>
    <comment>v3.9.19</comment>
  </data>
  <data name="DBCreateFailed" xml:space="preserve">
    <value>對不起，無法創建該資料庫。</value>
    <comment>v3.9.19</comment>
  </data>
  <data name="ErrorGettingSQLVersion" xml:space="preserve">
    <value>對不起，無法確定版本的 SQL 伺服器 ({0})</value>
    <comment>v3.9.19</comment>
  </data>
  <data name="ErrorOpeningFile" xml:space="preserve">
    <value>抱歉，開啟輸出檔案 {0} 失敗。錯誤：{1}</value>
  </data>
  <data name="InvalidDatabaseEdition" xml:space="preserve">
    <value>抱歉，資料庫版本 {0} 無效。請輸入 web, business, basic, standard, 或 premium。</value>
    <comment>v3.9.18</comment>
  </data>
  <data name="InvalidDatabaseEdition1V12" xml:space="preserve">
    <value>抱歉資料庫版本 {0} 是不正確。請輸入基本、 標準或溢價</value>
    <comment>v3.9.19</comment>
  </data>
  <data name="InvalidDatabaseSize" xml:space="preserve">
    <value>很抱歉，但你的資料庫大小 {0} 不是有效的選版 {1}。

每版有效尺寸是：
  web = 100 MB、 1 GB、 5 GB
  business = 10 GB、 20 GB、 30 GB，40 GB，50 GB，100 GB 或 150 GB
  basic = 100 MB、 500 MB、 1 GB、 2 GB
  standard = 100 MB、 500 MB、 1 GB、 2 GB、 5 GB、 10 GB、 20 GB、 30 GB，40 GB，50 GB、 100 GB，150 GB、 200 GB 或 250 GB
  premium = 100 MB、 500 MB、 1 GB、 2 GB、 5 GB、 10 GB、 20 GB、 30 GB，40 GB、 50 GB、 100 GB，150 GB、 200 GB、 250 GB、 300 GB、 400 GB 或 500 GB</value>
    <comment>v3.9.18</comment>
  </data>
  <data name="InvalidPerformanceLevel" xml:space="preserve">
    <value>對不起，版 {1} 的性能級別 {0} 是不正確。有效性能級別如下：
標準 = S0、 S1 或 S2
保費 = P1、 P2 或 P3</value>
    <comment>v3.9.18</comment>
  </data>
  <data name="InvalidPerformanceLevelV12" xml:space="preserve">
    <value>對不起，版 {1} 的性能級別 {0} 是不正確。有效性能級別如下：
標準 = S0、 S1、 S2 或 S3
保費 = P1、 P2 或 P3</value>
    <comment>v3.9.19</comment>
  </data>
  <data name="ProgramArgs" xml:space="preserve">
    <value>所有SQLAzureMWBatchUpload参數可以在config檔案中找到。
    
如果需要的话，你可以在config文件中修改預設的參數值。

用法： SQLAzureMWBatchUpload -S server -U username -P password -D Northwind -d true -e standard -l S1 -s "250 GB"

[-S 目標伺服器名稱]
[-U 使用者名稱]
[-P 密碼]
[-D 目標資料庫名稱]
[-c 資料庫的定序規則]
[-i TSQL 輸入檔案]
[-o 輸出檔案]
[-e 版本（web, business, basic, standard 或 premium）
[-l 性能水準 (standard = S0、 S1、 S2 或 S3，premium = P1、 P2 或 P3]
[-s 資料庫大小
    web = 100 MB、 1 GB 或 5 GB
    business = 10 GB、 20 GB、 30 GB，40 GB，50 GB，100 GB 或 150 GB
    basic = 100 MB、 500 MB、 1 GB 或 2 GB
    standard = 100 MB、 500 MB、 1 GB、 2 GB、 5 GB、 10 GB、 20 GB、 30 GB，40 GB，50 GB、 100 GB，150 GB、 200 GB 或 250 GB
    premium = 100 MB、 500 MB、 1 GB、 2 GB、 5 GB、 10 GB、 20 GB、 30 GB，40 GB、 50 GB、 100 GB，150 GB、 200 GB、 250 GB、 300 GB、 400 GB 或 500 GB]
[-T 信任連接]
[-d {true 或 false} 刪除現有資料庫]

注意，上述參數會覆寫應用程式 config 文件中的設定。</value>
    <comment>v3.9.18</comment>
  </data>
  <data name="ProgramVersion" xml:space="preserve">
    <value>{0}, 版本 {1}</value>
  </data>
  <data name="True" xml:space="preserve">
    <value>true</value>
  </data>
  <data name="WaitingForDBCreation" xml:space="preserve">
    <value>正在等待要創建資料庫...</value>
    <comment>v3.9.19</comment>
  </data>
</root>