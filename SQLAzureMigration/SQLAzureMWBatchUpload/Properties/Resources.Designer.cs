//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SQLAzureMWBatchUpload.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SQLAzureMWBatchUpload.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Database created.
        /// </summary>
        internal static string DBCreated {
            get {
                return ResourceManager.GetString("DBCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, failed to create the database..
        /// </summary>
        internal static string DBCreateFailed {
            get {
                return ResourceManager.GetString("DBCreateFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, unable to determine version of SQL server ({0}).
        /// </summary>
        internal static string ErrorGettingSQLVersion {
            get {
                return ResourceManager.GetString("ErrorGettingSQLVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, error opening output file {0}.  Error: {1}.
        /// </summary>
        internal static string ErrorOpeningFile {
            get {
                return ResourceManager.GetString("ErrorOpeningFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry database edition {0} is invalid. Please enter web, business, basic, standard, or premium..
        /// </summary>
        internal static string InvalidDatabaseEdition {
            get {
                return ResourceManager.GetString("InvalidDatabaseEdition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry database edition {0} is invalid. Please enter basic, standard, or premium..
        /// </summary>
        internal static string InvalidDatabaseEdition1V12 {
            get {
                return ResourceManager.GetString("InvalidDatabaseEdition1V12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, but your database size {0} is not valid for selected edition {1}.
        ///
        ///Valid sizes per edition are:
        ///  web = 100 MB, 1 GB, 5 GB
        ///  business = 10 GB, 20 GB, 30 GB, 40 GB, 50 GB, 100 GB, or 150 GB
        ///  basic = 100 MB, 500 MB, 1 GB, 2 GB
        ///  standard = 100 MB, 500 MB, 1 GB, 2 GB, 5 GB, 10 GB, 20 GB, 30 GB, 40 GB, 50 GB, 100 GB, 150 GB, 200 GB, or 250 GB
        ///  premium = 100 MB, 500 MB, 1 GB, 2 GB, 5 GB, 10 GB, 20 GB, 30 GB, 40 GB, 50 GB, 100 GB, 150 GB, 200 GB, 250 GB, 300 GB, 400 GB, or 500 GB.
        /// </summary>
        internal static string InvalidDatabaseSize {
            get {
                return ResourceManager.GetString("InvalidDatabaseSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, performance level {0} for edition {1} is invalid.  The valid performance levels are:
        ///  standard = S0, S1, or S2
        ///  premium = P1, P2, or P3.
        /// </summary>
        internal static string InvalidPerformanceLevel {
            get {
                return ResourceManager.GetString("InvalidPerformanceLevel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sorry, performance level {0} for edition {1} is invalid.  The valid performance levels are:
        ///  standard = S0, S1, S2 or S3
        ///  premium = P1, P2, or P3.
        /// </summary>
        internal static string InvalidPerformanceLevelV12 {
            get {
                return ResourceManager.GetString("InvalidPerformanceLevelV12", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All parameters for SQLAzureMWBatchUpload can be found in the config file.
        ///
        ///If you want, you can override the config file by specifying the parameters you want to override.
        ///
        ///usage: SQLAzureMWBatchUpload -S server -U username -P password -D Northwind -d true -e standard -l S1 -s &quot;250 GB&quot;
        ///
        ///[-S target server name]
        ///[-U username]
        ///[-P password]
        ///[-D target database name]
        ///[-c database collation]
        ///[-i TSQL input file]
        ///[-o output file]
        ///[-e Edition (web, business, basic, standard, or premium)
        ///[-l performan [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ProgramArgs {
            get {
                return ResourceManager.GetString("ProgramArgs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}, Version {1}.
        /// </summary>
        internal static string ProgramVersion {
            get {
                return ResourceManager.GetString("ProgramVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to true.
        /// </summary>
        internal static string True {
            get {
                return ResourceManager.GetString("True", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Waiting for database to be created ....
        /// </summary>
        internal static string WaitingForDBCreation {
            get {
                return ResourceManager.GetString("WaitingForDBCreation", resourceCulture);
            }
        }
    }
}
